window.ScreenViewer=function(e){function r(n){if(t[n])return t[n].exports;var u=t[n]={i:n,l:!1,exports:{}};return e[n].call(u.exports,u,u.exports,r),u.l=!0,u.exports}var t={};return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:n})},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},r.p="",r(r.s=0)}([function(e,r,t){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var n={map:{768:"mobile",1280:"tablet"},default:"desktop"},u=function(){return n.map},o=function(){return n.default},i=function(e){var r;if(!Array.isArray(e)||e.length<1)throw new Error("Module ScreenViewer, to method init$, should pass an array with observables");var t=u(),n=o(),i=void 0;return i=Rx.Observable.from(Object.keys(t)),(r=Rx.Observable).merge.apply(r,function(e){if(Array.isArray(e)){for(var r=0,t=Array(e.length);r<e.length;r++)t[r]=e[r];return t}return Array.from(e)}(e)).filter(function(e){return!!e}).switchMap(function(e){return i.filter(function(r){return e<+r}).map(function(e){return e?t[e]:e}).defaultIfEmpty(n).first().map(function(r){return{width:e,type:r}})}).distinctUntilChanged(function(e,r){return e.type===r.type})};r.default={getModuleName:function(){return"ScreenViewer"},getScreenMap:u,getScreenMapDefault:o,setup:function(e){return n=e,i},init$:i}}]).default;